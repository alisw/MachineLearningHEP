keras:
  simple_one_layer_binary_class:
    mltype: "BinaryClassification"
    activate: True
    default:
      layers:
        - {"n_nodes": 12, "activation": "relu"}
      optimizer: "adam"
      loss: "binary_crossentropy"
      epochs: 30
      batch_size: 50

  simple_two_layer_binary_class:
    mltype: "BinaryClassification"
    activate: False
    default:
      layers:
        - {"n_nodes": 12, "activation": "relu"}
        - {"n_nodes": 8, "activation": "relu"}
      optimizer: "adam"
      loss: "binary_crossentropy"
      epochs: 30
      batch_size: 50


xgboost:
  xgboost_classifier:
    mltype: "BinaryClassification"
    activate: True
    default: {}


scikit:
  random_forest_classifier:
    mltype: "BinaryClassification"
    activate: True
    default:
      max_depth: 5
      n_estimators: 10
      max_features: 1

  adaboost_classifier:
    mltype: "BinaryClassification"
    activate: True
    default: {}

  decision_tree_classifier:
    mltype: "BinaryClassification"
    activate: True
    default:
      max_depth: 5

  linear_regression:
    mltype: "Regression"
    activate: True
    default: {}

  ridge:
    mltype: "Regression"
    activate: True
    default:
      alpha: 1
      solver: "cholesky"

  lasso:
    mltype: "Regression"
    activate: True
    default:
      alpha: 0.1
