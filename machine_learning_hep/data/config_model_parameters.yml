BinaryClassification:

  keras:
    keras_simple_one_layer_binary_classifier:
      activate: False
      layers:
        - {"n_nodes": 12, "activation": "relu"}
      optimizer: "adam"
      loss: "binary_crossentropy"
      epochs: 30
      batch_size: 50

    keras_simple_two_layer_binary_classifier:
      activate: False
      layers:
        - {"n_nodes": 12, "activation": "relu"}
        - {"n_nodes": 8, "activation": "relu"}
      optimizer: "adam"
      loss: "binary_crossentropy"
      epochs: 30
      batch_size: 50

  scikit:
    scikit_random_forest_classifier:
      activate: False
      max_depth: 5
      n_estimators: 10
      max_features: 1

    scikit_adaboost_classifier:
      activate: False
      #max_depth: 3       # 1 default
      #n_estimators: 50   # 50 default
      #learning_rate: 0.5 # 1 default

    scikit_decision_tree_classifier:
      activate: False
      max_depth: 5

  xgboost:
    xgboost_classifier:
      activate: True
      min_child_weight: 3
      #max_depth: #18
      #booster: 'gbtree' 
      #subsample: #0.8500000000000003
      #colsample_bytree: #0.30000000000000004
      max_depth: 3
      gamma: 0
      subsample: 0.8
      colsample_bytree: 0.8
      colsample_bynode: 1
      random_state: 0
      learning_rate: 0.1
      n_estimators: 850
      tree_method: 'hist'
      objective : 'binary:logistic'

Regression:

  scikit:

    scikit_linear_regression:
      activate: True

    scikit_ridge_regression:
      activate: True
      alpha: 1
      solver: "cholesky"

    scikit_lasso_regression:
      activate: True
      alpha: 0.1
