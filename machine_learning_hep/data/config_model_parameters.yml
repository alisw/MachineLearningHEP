BinaryClassification:

  keras:
    keras_classifier:
      activate: False
      layers:
        - {"n_nodes": 12, "activation": "relu"}
      optimizer: "adam"
      loss: "binary_crossentropy"
      epochs: 30
      batch_size: 50

  scikit:
    scikit_random_forest_classifier:
      activate: False
      central_params:
        max_depth: 5
        n_estimators: 10
        max_features: 1

      grid_search:
        params:     
          n_estimators: [3, 10, 50, 100]
          max_features: [2,4,6,8]
          max_depth: [1,4]
        refit: AUC
        scoring: ["AUC", "Accuracy"]

    scikit_adaboost_classifier:
      activate: False
      central_params: {}
        #max_depth: 3       # 1 default
        #n_estimators: 50   # 50 default
        #learning_rate: 0.5 # 1 default

      grid_search:
        params:
          n_estimators: [3, 10, 50, 100]
          learning_rate: [0.1,0.5,0.9]
        refit: AUC
        scoring: ["AUC", "Accuracy"]

    scikit_decision_tree_classifier:
      activate: False
      central_params:
        max_depth: 5

#not default parameters
  xgboost:
    xgboost_classifier:
      activate: True
      central_params:
        max_depth: 3
        learning_rate: 0.1
        n_estimators: 850
        objective: 'binary:logistic'
        n_jobs: 10
        gamma: 0.
        min_child_weight: 3
        subsample: 0.8
        colsample_bytree: 0.8 
        colsample_bynode: 1
        random_state: 0
        tree_method: 'hist'
      #      early_stopping_rounds: 10
      grid_search:
        params:
          min_child_weight: [3] #[1, 3]
          max_depth: [2] #[3, 6]
          gamma: [0.2]
          subsample: [0.8] #[0.6, 0.8, 0.9]
          colsample_bytree: [0.8] #[0.6, 0.8, 0.9]
          learning_rate: [0.05, 0.15] #[0.05, 0.1, 0.5]
          n_estimators: [200, 300] #[500, 800, 1000]
          objective: ["binary:logistic"]
        refit: AUC
        scoring: ["AUC", "Accuracy"]


Regression:

  scikit:

    scikit_linear_regression:
      activate: True
      central_params: {}

    scikit_ridge_regression:
      activate: True
      central_params:
        alpha: 1
        solver: "cholesky"

    scikit_lasso_regression:
      activate: True
      central_params:
        alpha: 0.1
